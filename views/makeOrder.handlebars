<h1>Make Purchase</h1>
<form id="orderForm" action="/orders/purchase" method="POST">
  <div class="form-row">
    <div class="form-group col-sm-2">
      <label>Requestor</label>
      <input class="form-control" name="requestor" type="text" value="{{user.name}}" readonly>
    </div>
    <div class="form-group col-sm-2">
      <div class="input-group mb-3">
        <select class="form-control custom-select" name="subteam" id="subteamDropdown">
          {{!-- {{> teamsDropdown}} --}}
        </select>
      </div>
    </div>
    <div class="form-group col-auto">
      <label>Project</label>
      <input class="form-control" type="text" name="project">
    </div>
  </div>
  <div class="form-row">
    <div class='form-group col-auto'>
      <label>Item</label>
      <input class="form-control" id="item" name="item" type="text" required>
    </div>
    <div class="form-group col-auto">
      <label>Supplier</label>
      <input class="form-control" id="supplier" name="supplier" type="text" required>
    </div>
    <div class="form-group col-auto">
      <label>Product Number</label>
      <input class="form-control" id="productNum" name="productNum">
    </div>
  </div>
  <div class="form-row">
    <div class="form-group col-auto">
      <label>Estimated Quantity</label>
      <input class="form-control" id="quantity" name="quantity" type="text" required>
    </div>
    <div class="form-group col-auto">
      <label>Estimated <b>Individual</b> Cost</label>
      <div class="input-group">
        <div class="input-group-prepend">
          <div class="input-group-text">$</div>
        </div>
        <input class="form-control" name="cost" id="cost" type="text" step=".01" min="0" required>
      </div>
    </div>
    <div class="form-group col-auto">
      <div class="form-check">
      <input type="checkbox" name="podCost">
      <label for="podCost">Counts toward pod cost?</label>
      </div>
    </div>
  </div>
  <div class="form-row">
    <div class="form-group col-auto">
      <label for="link">Link to Purchase</label>
      <input class="form-control" type="text" name="link" id="link">
    </div>
    <div class="form-group col-auto"> 
      <label for="date">Needed By:</label>
      <input class="form-control" type="date" name="date" id="date">
    </div>
  </div>
    <div class="form-row">
    <label for="comments">Comments:</label>
    <input class="form-control" type="text" name="comments" id="comments" rows="3" style="border: 2px red" id="comments">
  </div>
    <div class="form-row">
    <input type="file" id="fileInput" onchange="Upload()" />
  </div>
    <div class="form-row">
    <div class="form-check ">
      <input type="checkbox" name="notARequest" id="notArequestCheck">
      <label for="notARequestCheck" class="form-check-label">I will/did purchase this myself (Make sure you get written or verbal approval)</label>
    </div>
  </div>
  <div class="form-row">
    <div class="form-check">
      <input type="checkbox" name="confirm" required>
      <label class="form-check-label">I have double checked that I need this item and all information is correct (required)</label>
    </div>
  </div>
  <br>
  <button class="btn btn-lg btn-success" type="submit">Submit Order</button>
</form>
<script>
  const DROPDOWN = document.getElementById('subteamDropdown');
  const TEAMS_LIST_STRING = "{{teamList}}";
  const TEAMS_LIST = TEAMS_LIST_STRING.split(',');
  TEAMS_LIST.forEach((team) => {
    let option = document.createElement('option');
    option.id = String(team);
    option.name = String(team);
    option.innerHTML = String(team);
    DROPDOWN.appendChild(option);
  });

  /* const FORM_INPUT = document.getElementById('fileInput');

  FORM_INPUT.addEventListener('change', () => {
    readXlsxFile(input.files[0]).then((rows) => {
      console.log(rows);
    });
    
  }); */
</script>

<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.13.5/xlsx.full.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.13.5/jszip.js"></script>
<script type="text/javascript">
    function Upload() {
        //Reference the FileUpload element.
        var fileUpload = document.getElementById("fileInput");
 
        //Validate whether File is valid Excel file.
        var regex = /^([a-zA-Z0-9\s_\\.\-:])+(.xls|.xlsx)$/;
        if (regex.test(fileUpload.value.toLowerCase())) {
            if (typeof (FileReader) != "undefined") {
                var reader = new FileReader();
 
                //For Browsers other than IE.
                if (reader.readAsBinaryString) {
                    reader.onload = function (e) {
                        ProcessExcel(e.target.result);
                    };
                    reader.readAsBinaryString(fileUpload.files[0]);
                } else {
                    //For IE Browser.
                    reader.onload = function (e) {
                        var data = "";
                        var bytes = new Uint8Array(e.target.result);
                        for (var i = 0; i < bytes.byteLength; i++) {
                            data += String.fromCharCode(bytes[i]);
                        }
                        ProcessExcel(data);
                    };
                    reader.readAsArrayBuffer(fileUpload.files[0]);
                }
            } else {
                alert("This browser does not support HTML5.");
            }
        } else {
            alert("Please upload a valid Excel file.");
        }
    };
    function ProcessExcel(data) {
      console.log('processing')
        //Read the Excel File data.
        var workbook = XLSX.read(data, {
            type: 'binary'
        });

        console.log(workbook);
        let sheet = workbook.SheetNames[0];
        let rows = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheet]);
        console.log(rows);
        const NUM_ROWS = rows.length

        function getListOfPartNames() {
          let output = []; // Empty part list
          for(let i=0; i< NUM_ROWS; i++) {
            output[i] = rows[i].Description;
          }
          return output.toString();
        }

        function getListOfProductNums() {
          let output = [];
          for (let i=0; i < NUM_ROWS; i++) {
            output[i] = rows[i]["Manufacturer Part Number"];
          }
          return output.toString();
        }

        function getListOfQuantities() {
          let output = [];
          for (let i=0; i<NUM_ROWS; i++) {
            output[i] = rows[i].Quantity;
          }
          return output.toString();
        }

        function getRowCost(rowIndex) {
          let price = Number(rows[rowIndex]["Unit Price"]);
          let quantity = Number(rows[rowIndex].Quantity);
          console.log(`${price} * ${quantity}`)
          return price * quantity;
        }

        function getListOfCosts() {
          let output = [];
          for (let i = 0; i < NUM_ROWS; i++) {
            output[i] = rows[i]["Unit Price"];
          }
          return output.toString();
        }

        function getTotalCost() {
          let output = 0;
          for (let i = 0; i < NUM_ROWS; i++) {
            output += getRowCost(i);
            console.log(output)
          }
          return output.toString();
        }

        function getListOfManPartNums() {
          let output = [];
          for (let i =0; i < NUM_ROWS; i++) {
            output[i] = rows[i]["Manufacturer Part Number"];
          }
          return output.toString();
        }

        function fillComments() {
          let output = "";
          output += "Manufacturer Part Numbers: ";
          output += getListOfManPartNums();
          output += '\n';
          
          return output.toString();
        }
        console.log(getListOfPartNames());
        document.getElementById('item').value = `${getListOfPartNames()}`;
        document.getElementById('productNum').value = getListOfProductNums();
        document.getElementById('quantity').value = getListOfQuantities();
        document.getElementById('cost').value = getListOfCosts();
        document.getElementById('supplier').value = "Digikey";
        document.getElementById('comments').value = fillComments();
        let isDigikeyOrder = document.createElement('input');
        isDigikeyOrder.name = 'isDigikeyOrder';
        isDigikeyOrder.style.display = 'none';
        isDigikeyOrder.value = getTotalCost();
        document.getElementById('orderForm').appendChild(isDigikeyOrder);
    };
</script>
