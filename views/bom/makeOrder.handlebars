<h1>Make {{type}}</h1>
<br><br>
<form id="makeForm" action="/orders/purchase" method="POST">
  <h3>{{type}} Details</h3>
  <div id="orderDetails">
    <p>
      <label>Requestor</label>
      <input class="form-control" name="requestor" type="text" value="{{user.name}}" readonly>
    </p>
    <p>
      <label>Subteam</label>
      <select class="form-control custom-select" name="subteam" id="subteamDropdown" required>
        {{!-- {{> teamsDropdown}} --}}
      </select>
    </p>
    <p>
      <label>Supplier</label>
      <input class="form-control" id="supplier" name="supplier" type="text" required>
    </p>
  </div>
  <hr />
  <h3>Items</h3>
  <div id="orderItems">
    <div id="item1" class="ItemDetails">
      <p>
        <label>Item Name</label>
        <input class="form-control" id="itemName" name="itemName" type="text" required>
      </p>
      <p>
        <label>Product Number</label>
        <input class="form-control" id="productNum" name="productNum" type="text">
      </p>
      <p>
        <label>Price</label>
        <input class="form-control" id="itemPrice" name="itemPrice" type="number" min="0" step="0.01" required>
      </p>
      <p>
        <label>Quantity</label>
        <input class="form-control" id="quantity" name="quantity" type="number" min="1" step="1" required>
      </p>
      <p>
        <label>Project</label>
        <input class="form-control" id="project" name="project" type="text">
      </p>
      <p id="editButtons">
        <span id="addButton" type="button" onclick="addItem()" class="SquareButton btn-success">+</span>
        <span id="remButton" type="button" onclick="removeItem()" class="SquareButton btn-danger">-</span>
      </p>
    </div>
  </div>
  <hr />
  <h3>Finalize</h3>
  <div id="finalDetails">
    <p>
      <label for="podCost">Counts toward pod cost?</label>
      <input type="checkbox" name="podCost">
    </p>
    <p>
      <label for="link">Link to Purchase</label>
      <input class="form-control" type="text" name="link" id="link">
    </p>
    <p>
      <label for="date">Needed By:</label>
      <input class="form-control" type="date" name="date" id="date">
    </p>
  </div>
  <p class="full-width">
    <label for="comments">Comments:</label>
    <textarea name="comments" id="comments" cols="30" rows="4"></textarea>
  </p>
  <hr />
  <p>
    <label style="display:inline" for="confirm">I have double checked that I need this item and all information is
      correct (required)</label>
    <input style="width:auto" type="checkbox" name="confirm" required>
    <br>
  </p>
  <br><br>
  <p>
    <button class="btn btn-lg btn-success" type="submit">Submit Order</button>
  </p>
</form>

<script>
  let numItems = 1; // Ew Global vars //TODO this for later
  co
  function addItem() {
    let template = document.querySelector('#item' + numItems);
    let buttons = document.querySelector("#editButtons");
    let clone = template.cloneNode(true);
    clone.id = 'item' + ++numItems;
    template.removeChild(buttons);
    template.after(clone);
  }

  function removeItem() {
    if (numItems == 1) return;
    let lastItem = document.querySelector('#item' + numItems);
    let secondLastItem = document.querySelector('#item' + --numItems);
    let buttons = document.querySelector("#editButtons");
    secondLastItem.appendChild(buttons);
    lastItem.parentNode.removeChild(lastItem);
  }
</script>
<script>
  const DROPDOWN = document.getElementById('subteamDropdown');
  const TEAMS_LIST_STRING = "{{teamList}}";
  const TEAMS_LIST = TEAMS_LIST_STRING.split(',');
  TEAMS_LIST.forEach((team) => {
    let option = document.createElement('option');
    option.id = String(team);
    option.name = String(team);
    option.innerHTML = String(team);
    DROPDOWN.appendChild(option);
  });

  /* const FORM_INPUT = document.getElementById('fileInput');

  FORM_INPUT.addEventListener('change', () => {
    readXlsxFile(input.files[0]).then((rows) => {
      console.log(rows);
    });

  }); */
</script>

<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.13.5/xlsx.full.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.13.5/jszip.js"></script>
<script type="text/javascript">
  function Upload() {
    //Reference the FileUpload element.
    var fileUpload = document.getElementById("fileInput");

    //Validate whether File is valid Excel file.
    var regex = /^([a-zA-Z0-9\s_\\.\-:])+(.xls|.xlsx)$/;
    if (regex.test(fileUpload.value.toLowerCase())) {
      if (typeof (FileReader) != "undefined") {
        var reader = new FileReader();

        //For Browsers other than IE.
        if (reader.readAsBinaryString) {
          reader.onload = function (e) {
            ProcessExcel(e.target.result);
          };
          reader.readAsBinaryString(fileUpload.files[0]);
        } else {
          //For IE Browser.
          reader.onload = function (e) {
            var data = "";
            var bytes = new Uint8Array(e.target.result);
            for (var i = 0; i < bytes.byteLength; i++) {
              data += String.fromCharCode(bytes[i]);
            }
            ProcessExcel(data);
          };
          reader.readAsArrayBuffer(fileUpload.files[0]);
        }
      } else {
        alert("This browser does not support HTML5.");
      }
    } else {
      alert("Please upload a valid Excel file.");
    }
  };
  function ProcessExcel(data) {
    console.log('processing')
    //Read the Excel File data.
    var workbook = XLSX.read(data, {
      type: 'binary'
    });

    console.log(workbook);
    let sheet = workbook.SheetNames[0];
    let rows = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheet]);
    console.log(rows);
    const NUM_ROWS = rows.length

    function getListOfPartNames() {
      let output = []; // Empty part list
      for (let i = 0; i < NUM_ROWS; i++) {
        output[i] = rows[i].Description;
      }
      return output.toString();
    }

    function getListOfProductNums() {
      let output = [];
      for (let i = 0; i < NUM_ROWS; i++) {
        output[i] = rows[i]["Manufacturer Part Number"];
      }
      return output.toString();
    }

    function getListOfQuantities() {
      let output = [];
      for (let i = 0; i < NUM_ROWS; i++) {
        output[i] = rows[i].Quantity;
      }
      return output.toString();
    }

    function getRowCost(rowIndex) {
      let price = Number(rows[rowIndex]["Unit Price"]);
      let quantity = Number(rows[rowIndex].Quantity);
      console.log(`${price} * ${quantity}`)
      return price * quantity;
    }

    function getListOfCosts() {
      let output = [];
      for (let i = 0; i < NUM_ROWS; i++) {
        output[i] = rows[i]["Unit Price"];
      }
      return output.toString();
    }

    function getTotalCost() {
      let output = 0;
      for (let i = 0; i < NUM_ROWS; i++) {
        output += getRowCost(i);
        console.log(output)
      }
      return output.toString();
    }

    function getListOfManPartNums() {
      let output = [];
      for (let i = 0; i < NUM_ROWS; i++) {
        output[i] = rows[i]["Manufacturer Part Number"];
      }
      return output.toString();
    }

    function fillComments() {
      let output = "";
      output += "Manufacturer Part Numbers: ";
      output += getListOfManPartNums();
      output += '\n';

      return output.toString();
    }
    console.log(getListOfPartNames());
    document.getElementById('item').value = `${getListOfPartNames()}`;
    document.getElementById('productNum').value = getListOfProductNums();
    document.getElementById('quantity').setAttribute('type', 'text');
    document.getElementById('quantity').value = getListOfQuantities();
    document.getElementById('cost').setAttribute('type', 'text');
    document.getElementById('cost').value = getListOfCosts();
    document.getElementById('supplier').value = "Digikey";
    document.getElementById('comments').value = fillComments();
    let isDigikeyOrder = document.createElement('input');
    isDigikeyOrder.name = 'isDigikeyOrder';
    isDigikeyOrder.style.display = 'none';
    isDigikeyOrder.value = getTotalCost();
    document.getElementById('makeForm').appendChild(isDigikeyOrder);
  };
</script>